{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","length","map","Search","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","a","fetch","res","json","users","this","console","log","header","message","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAaeA,EAVF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCMTC,G,MAVE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACI,qBAAKP,UAAU,YAAf,SACyB,IAApBO,EAASC,OAAeD,EAASE,KAAI,SAAAV,GAAO,OAC7C,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,OACf,gDCADQ,G,MANA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC3B,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC8CrEG,EA5Cf,kDACE,aAAc,IAAD,8BACX,gBAkBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALJ,EADf,4FAUE,8BAAAI,EAAA,+EAEsBC,MAAM,+CAF5B,cAEUC,EAFV,gBAGwBA,EAAIC,OAH5B,OAGUC,EAHV,OAIIC,KAAKV,SAAS,CAAEV,SAAUmB,IAJ9B,kDAMIE,QAAQC,IAAI,KAAIC,OAAQ,KAAIC,SANhC,0DAVF,0EAwBE,WACE,MAAkCJ,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZc,EAAmBzB,EAAS0B,QAAO,SAAAlC,GAAO,OAC9CA,EAAQK,KAAK8B,cAAcC,SAASjB,EAAYkB,wBAElD,OACE,sBAAKpC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAQY,aAAce,KAAKf,aAAcD,YAAY,mBACrD,cAAC,EAAD,CAAUJ,SAAUyB,WAjC5B,GAAyBK,aCKVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.872797b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({monster}) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=150x150`} alt=\"monster\" />\r\n            <h1>{monster.name}</h1>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../card/Card';\r\nimport './CardList.css';\r\n\r\nconst CardList = ({monsters}) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {monsters.length !== 0 ? monsters.map(monster =>(\r\n            <Card key={monster.id} monster={monster}/>\r\n          )) : (<h1>No Monster</h1>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react';\r\nimport './Search.css'\r\n\r\nconst Search = ({ placeholder, handleChange}) => {\r\n    return (\r\n        <input className=\"search\" type='search' placeholder={placeholder} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react'\n// import logo from './logo.svg';\nimport './App.css';\nimport CardList from './components/card-list/CardList';\nimport Search from './components/search/Search';\n\n\nexport class App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount (){\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users/');\n      const users = await res.json();\n      this.setState({ monsters: users });\n    } catch (err) {\n      console.log(err.header, err.message);      \n    }\n  }\n\n  handleChange = e =>{\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster=>(\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    ))\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <Search handleChange={this.handleChange} placeholder=\"Search monster\" />\n        <CardList monsters={filteredMonsters}/>\n        {/* <header className=\"App-header\">\n          <img src={logo} alt=\"logo\" className=\"App-logo\" />\n          <p>{isTrue ? 'Hey, Tzuyu':'Hey, My Chou Tzuyu!'}</p>\n          <button onClick={()=> this.setState({ isTrue: !isTrue })}>Change Text</button>\n        </header> */}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}